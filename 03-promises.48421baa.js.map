{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACNH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAElDA,E,IAmBRL,EAAKc,iBAAiB,UAEtB,SAAmBC,GACjBA,EAAEC,iBACF,IAAMX,EAAQL,EAAKK,MAAMY,MACnBC,EAAOlB,EAAKkB,KAAKD,MACjBE,EAASnB,EAAKmB,OAAOF,OArB7B,SAAqBZ,EAAOa,EAAMC,GAEhC,IADA,IAAIf,EAAW,EACNgB,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAE/BjB,EADAC,GAAY,EACYC,GACrBgB,MAAK,SAAAd,GACJe,EAAAxB,GAASyB,OAAOC,QAAQjB,E,IAEzBkB,OAAM,SAAAjB,GACLc,EAAAxB,GAASyB,OAAOG,QAAQlB,E,IAE5BH,EAAQsB,OAAOtB,GAASsB,OAAOT,E,EAWjCU,CAAYvB,EAAOa,EAAMC,GACzBJ,EAAEc,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n     const shouldResolve = Math.random() > 0.3;\n     setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n     }, delay)\n  });\n}\n\nfunction showPromise(delay, step, amount) {\n  let position = 0;\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(resolve => {\n        Notiflix.Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notiflix.Notify.failure(reject);\n      });\n    delay = Number(delay) + Number(step);\n  }\n}\n\nform.addEventListener('submit', submitBtn);\n\nfunction submitBtn(e) {\n  e.preventDefault();\n  const delay = form.delay.value;\n  const step = form.step.value;\n  const amount = form.amount.value;\n  showPromise(delay, step, amount);\n  e.currentTarget.reset();\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","e","preventDefault","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","Number","$ce04d3a99e08e73b$var$showPromise","currentTarget","reset"],"version":3,"file":"03-promises.48421baa.js.map"}